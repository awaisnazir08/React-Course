{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","handleMode","modee","settingMode","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","role","toggleMode","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","console","log","target","rows","placeholder","style","backgroundColor","formColor","color","textt","toUpperCase","showAlert","toLowerCase","noSpaceCharacters","split","join","length","alert","document","getElementById","select","navigator","clipboard","writeText","replace","trim","summary","Alert","word","capital","slice","Capitalize","message","App","setAlert","_useState3","_useState4","setMode","_useState5","_useState6","setFormColor","setTimeout","body","modd","classList","add","remove","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f77d5914.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport './Navbar.css'\r\n// import {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n\r\n  const handleMode=(modee)=>{\r\n    props.settingMode(modee)\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"btn-group\">\r\n        <a id=\"button1\" href='#' className=\"btn btn-primary active\" aria-current=\"page\" onClick={()=>handleMode('purple')} >Purple</a>\r\n        <a id=\"button2\" className=\"btn btn-primary\" onClick={()=>handleMode('blue')}>Blue</a>\r\n        <a id=\"button3\" className=\"btn btn-primary\" onClick={()=>handleMode('green')}>Green</a>\r\n        <a id=\"lastbutton\" className=\"btn btn-primary\" onClick={()=>handleMode('grey')}>Grey</a>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes={title: propTypes.string.isRequired,\r\n                 aboutText: propTypes.string.isRequired}\r\n\r\nNavbar.defaultProps={\r\n    title: \"Set Title Here\",\r\n    aboutText: \"About text here\"\r\n}\r\n","import React,{useState} from 'react'\r\nimport propTypes from 'prop-types'\r\nimport './TextForm.css'\r\n\r\n// import PropTypes from 'prop-types'\r\nexport default function TextForm(props) {\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleOnClick=()=>{\r\n    console.log(\"On click \"+ text);\r\n    let textt=text.toUpperCase();\r\n    setText(textt);\r\n    props.showAlert(\"Converted to Upper Case\",'success');\r\n\r\n  }\r\n\r\n  const handleLoClick=()=>{\r\n    // console.log(\"On click \"+ text);\r\n    let textt=text.toLowerCase();\r\n    setText(textt);\r\n    props.showAlert(\"Converted to Lower Case\",'success');\r\n\r\n  }\r\n\r\n  const wordCheck=()=>{\r\n    const words = text.trim().split(/\\s+/); // Split by one or more spaces\r\n    return words.length;\r\n  }\r\n\r\n  const nospace=()=>{\r\n    let n=text.split(\" \");\r\n    let noSpaceCharacters=n.join(\"\").length;\r\n    alert(`${noSpaceCharacters} characters present without any spaces!`,) ;\r\n  }\r\n\r\n  const clearText=()=>{\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared text\",'success');\r\n\r\n  }\r\n  const copyText=()=>{\r\n    let text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied text to ClipBoard\",'success');\r\n\r\n  }\r\n\r\n  const removeExtraSpaces=()=>{\r\n    let textt = text.replace(/\\s+/g, ' ').trim();\r\n    setText(textt);\r\n    props.showAlert(\"Extra Spaces removed\",'success');\r\n  }\r\n\r\n  const timeToRead=()=>{\r\n    const words = text.trim().split(/\\s+/); // Split by one or more spaces\r\n    return words.length;\r\n  }\r\n  const [text, setText]= useState(\"\");\r\n  // setText(\"Write text here\");\r\n  return (\r\n    <>\r\n    <div className={`container my-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n          {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n          <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"10\" placeholder={props.placeholder} style={{backgroundColor:`${props.mode==='light'?'white':props.formColor}`,color:`${props.mode==='light'?'black':'white'}`}}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleOnClick} >Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary\" onClick={handleLoClick} >Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary\" onClick={nospace} >Characters without Spaces</button>\r\n        <button className=\"btn btn-primary\" onClick={copyText} >Copy Text</button>\r\n        <button className=\"btn btn-primary\" onClick={clearText} >Clear Text</button>\r\n        <button className=\"btn btn-primary\" onClick={removeExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n\r\n    </div>\r\n    <div className={`container my-4 text-${props.mode==='light'?'dark':'light'}`}>\r\n      <h2>{props.summary}</h2>\r\n      The text has <b>{text.length>0?wordCheck(): 0}</b> words and <b>{text.length}</b> characters\r\n      <br/>\r\n      Estimated time to read: <b>{text.length>0?timeToRead()*0.008:0}</b> minutes\r\n      <br></br>\r\n      {/* <br></br> */}\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter text in the above box to preview it here..!!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.propTypes={ heading: propTypes.string.isRequired,\r\n                     placeholder: propTypes.string,\r\n                     summary: propTypes.string.isRequired\r\n}\r\nTextForm.defaultProps={\r\n    heading: \"This is the heading\",\r\n    placeholder: \"Write Here\",\r\n    summary: \"Text Summary\"\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Capitalize=(word)=>{\r\n        let capital=word.toLowerCase();\r\n        let f=capital[0].toUpperCase();\r\n        return f+capital.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\n// import About from './Components/About';\r\nimport Navbar from './Components/Navbar'\r\nimport TextForm from './Components/TextForm';\r\nimport Alert from './Components/Alert';\r\n// import {\r\n//   BrowserRouter,\r\n//   Switch,\r\n//   Route,\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [alert,setAlert]=useState(null);\r\n  const [mode,setMode]=useState('light');\r\n  const [formColor,setFormColor]=useState('white');\r\n  const settingMode=(modd)=>{\r\n    console.log('hello');\r\n    if(modd==='purple')\r\n    {\r\n      document.getElementById(\"button1\").classList.add(\"active\");\r\n      document.getElementById(\"button2\").classList.remove(\"active\");\r\n      document.getElementById(\"lastbutton\").classList.remove(\"active\");\r\n      document.body.style.backgroundColor=\"#9966ff\";\r\n      showAlert(\"The purple mode has been enabled\",\"success\");\r\n      setFormColor('#9966ff');\r\n      setMode('dark');\r\n    }\r\n    else if(modd==='blue')\r\n    {\r\n      document.getElementById(\"button1\").classList.remove(\"active\");\r\n      document.getElementById(\"button2\").classList.add(\"active\");\r\n      document.getElementById(\"lastbutton\").classList.remove(\"active\");\r\n      document.body.style.backgroundColor=\"#00bfff\";\r\n      showAlert(\"The blue mode has been enabled\",\"success\");\r\n      setFormColor('#00bfff');\r\n      setMode('dark');\r\n    }\r\n    else if(modd==='grey')\r\n    {\r\n      document.getElementById(\"button1\").classList.remove(\"active\");\r\n      document.getElementById(\"button2\").classList.remove(\"active\");\r\n      document.getElementById(\"lastbutton\").classList.add(\"active\");\r\n      document.body.style.backgroundColor=\"grey\";\r\n      showAlert(\"The grey mode has been enabled\",\"success\");\r\n      setFormColor('grey');\r\n      setMode('dark');\r\n    }\r\n    else if(modd==='green')\r\n    {\r\n      document.getElementById(\"button1\").classList.remove(\"active\");\r\n      document.getElementById(\"button2\").classList.remove(\"active\");\r\n      document.getElementById(\"button3\").classList.add(\"active\");\r\n      document.body.style.backgroundColor=\"#003300\";\r\n      showAlert(\"The green mode has been enabled\",\"success\");\r\n      setFormColor('#003300');\r\n      setMode('dark');\r\n    }\r\n\r\n  }\r\n  const showAlert=(message,type)=>{\r\n    setAlert({\r\n      message:message,\r\n      type:type\r\n    })\r\n    setTimeout(()=>{\r\n      setAlert(null);\r\n    },2000)\r\n  }\r\n\r\n  const toggleMode=()=>{\r\n    if(mode==='light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor=\"#042743\";\r\n      showAlert(\"The dark mode has been enabled\",\"success\");\r\n      setFormColor('#042743');\r\n      document.title=\"TextUtils - Dark Mode\"\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor=\"white\";\r\n      showAlert(\"The light mode has been enabled\",\"success\")\r\n      document.title=\"TextUtils - Light Mode\"\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <BrowserRouter> */}\r\n      <Navbar title=\"Text Utils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} settingMode={settingMode}/>\r\n      <Alert alert={alert}/>\r\n        {/* <Switch>\r\n              <Route exact path=\"/about\">\r\n                <About/>\r\n              </Route>\r\n              <Route exact path=\"/\"> */}\r\n                <TextForm heading=\"Enter the text to Analyze\" placeholder=\"Enter here\" mode={mode} showAlert={showAlert} formColor={formColor}/>\r\n              {/* </Route>\r\n        </Switch> */}\r\n    {/* </BrowserRouter> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}